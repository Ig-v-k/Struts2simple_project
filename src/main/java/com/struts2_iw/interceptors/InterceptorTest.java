package com.struts2_iw.interceptors;

import java.util.logging.Logger;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.StrutsStatics;

import com.opensymphony.xwork2.Action;
import com.opensymphony.xwork2.ActionInvocation;
import com.opensymphony.xwork2.interceptor.AbstractInterceptor;
import com.struts2_iw.interfaces.UserAware;

public class InterceptorTest extends AbstractInterceptor{
	private static final long serialVersionUID = 1L;
    private static final Logger LOGGER = Logger.getLogger(InterceptorTest.class.getName());
    
    @Override
    public void init() {
    	LOGGER.info("--- LOGGER: init()");
    	super.init();
    }
    
	@Override
	public String intercept(ActionInvocation invocation) throws Exception {
		HttpServletRequest request = (HttpServletRequest) invocation.getInvocationContext().get(StrutsStatics.HTTP_REQUEST);
		LOGGER.info("\t********* Request START *********"
        		+ "\n\nServletActionContext.getActionContext(my_request).getName() -> " + ServletActionContext.getActionContext(request).getName()
        		+ "\nServletActionContext.getActionMapping().getName -> " + ServletActionContext.getActionMapping().getName()
        		+ "\nServletActionContext.getActionMapping().getExtension() -> " + ServletActionContext.getActionMapping().getExtension()
        		+ "\nServletActionContext.getActionMapping().getMethod() -> " + ServletActionContext.getActionMapping().getMethod()
        		+ "\nServletActionContext.getActionMapping().getNamespace() -> " + ServletActionContext.getActionMapping().getNamespace()
        		+ "\nServletActionContext.getActionMapping().getParams() -> " + ServletActionContext.getActionMapping().getParams()
        		+ "\nServletActionContext.getActionMapping().getResults()" + ServletActionContext.getActionMapping().getResult()
//        		+ "\n\nServletActionContext.getPageContext().toString() -> " + ServletActionContext.getPageContext().toString()
//        		+ "\nServletActionContext.getPageContext().getELContext().toString() -> " + ServletActionContext.getPageContext().getELContext().toString()
//        		+ "\nServletActionContext.getPageContext().getELContext().getELResolver().toString() -> " + ServletActionContext.getPageContext().getELContext().getELResolver().toString()
//        		+ "\nServletActionContext.getPageContext().getELContext().getEvaluationListeners() -> " + ServletActionContext.getPageContext().getELContext().getEvaluationListeners()
//        		+ "\nServletActionContext.getPageContext().getELContext().getFunctionMapper().toString() -> " + ServletActionContext.getPageContext().getELContext().getFunctionMapper().toString()
//        		+ "\nServletActionContext.getPageContext().getELContext().getImportHandler().toString() -> " + ServletActionContext.getPageContext().getELContext().getImportHandler().toString()
//        		+ "\nServletActionContext.getPageContext().getELContext().getVariableMapper().toString() -> " + ServletActionContext.getPageContext().getELContext().getVariableMapper().toString()
//        		+ "\nServletActionContext.getPageContext().getELContext().isPropertyResolved() -> " + ServletActionContext.getPageContext().getELContext().isPropertyResolved()
//        		+ "\nServletActionContext.getPageContext().getErrorData().toString() -> " + ServletActionContext.getPageContext().getErrorData().toString()
//        		+ "\nServletActionContext.getPageContext().getErrorData().getRequestURI() -> " + ServletActionContext.getPageContext().getErrorData().getRequestURI()
//        		+ "\nServletActionContext.getPageContext().getErrorData().getServletName() -> " + ServletActionContext.getPageContext().getErrorData().getServletName()
//        		+ "\nServletActionContext.getPageContext().getErrorData().getStatusCode() -> " + ServletActionContext.getPageContext().getErrorData().getStatusCode()
//        		+ "\nServletActionContext.getPageContext().getPage().toString() -> " + ServletActionContext.getPageContext().getPage().toString()
//        		+ "\nServletActionContext.getPageContext().getRequest().toString() -> " + ServletActionContext.getPageContext().getRequest().toString()
//        		+ "\nServletActionContext.getPageContext().getResponse().toString() -> " + ServletActionContext.getPageContext().getResponse().toString()
//        		+ "\nServletActionContext.getPageContext().pushBody().toString() -> " + ServletActionContext.getPageContext().pushBody().toString()
        		+ "\nServletActionContext.getValueStack(my_request).toString() -> " + ServletActionContext.getValueStack(request).toString()
        		+ "\nServletActionContext.getValueStack(my_request).getContext() -> " + ServletActionContext.getValueStack(request).getContext()
        		+ "\nServletActionContext.getValueStack(my_request).getExprOverrides() -> " + ServletActionContext.getValueStack(request).getExprOverrides()
        		+ "\nServletActionContext.getValueStack(my_request).getRoot().toString() -> " + ServletActionContext.getValueStack(request).getRoot().toString()
        		+ "\nServletActionContext.getContext().getName() -> " + ServletActionContext.getContext().getName()
        		+ "\n\nrequest.toString() -> " + request.toString()
//        		+ "\nrequest.changeSessionId() -> " + my_request.changeSessionId()
        		+ "\nrequest.getAuthType() -> " + request.getAuthType()
        		+ "\nrequest.getCharacterEncoding() -> " + request.getCharacterEncoding()
        		+ "\nrequest.getContentLength() -> " + request.getContentLength()
//        		+ "\nrequest.getContentLengthLong() -> " + my_request.getContentLengthLong()
        		+ "\nrequest.getContentType() -> " + request.getContentType()
        		+ "\nrequest.getContextPath() -> " + request.getContextPath()
        		+ "\nrequest.getLocalAddr() -> " + request.getLocalAddr()
        		+ "\nrequest.getLocalName() -> " + request.getLocalName()
        		+ "\nrequest.getLocalPort() -> " + request.getLocalPort()
        		+ "\nrequest.getMethod() -> " + request.getMethod()
        		+ "\nrequest.getPathInfo() -> " + request.getPathInfo()
        		+ "\nrequest.getPathTranslated() -> " + request.getPathTranslated()
        		+ "\nrequest.getProtocol() -> " + request.getProtocol()
        		+ "\nrequest.getQueryString() -> " + request.getQueryString()
        		+ "\nrequest.getRemoteAddr() -> " + request.getRemoteAddr()
        		+ "\nrequest.getRemoteHost() -> " + request.getRemoteHost()
        		+ "\nrequest.getRemotePort() -> " + request.getRemotePort()
        		+ "\nrequest.getRemoteUser() -> " + request.getRemoteUser()
        		+ "\nrequest.getRequestedSessionId() -> " + request.getRequestedSessionId()
        		+ "\nrequest.getRequestURI() -> " + request.getRequestURI()
        		+ "\nrequest.getScheme() -> " + request.getScheme()
        		+ "\nrequest.getServerName() -> " + request.getServerName()
        		+ "\nrequest.getServerPort() -> " + request.getServerPort()
        		+ "\nrequest.getServerPath() -> " + request.getServletPath()
//        		+ "\nrequest.getAsyncContext().toString() -> " + my_request.getAsyncContext().toString()
//        		+ "\nrequest.getAsyncContext().getTimeout() -> " + my_request.getAsyncContext().getTimeout()
//        		+ "\nrequest.getAsyncContext().getRequest().toString() -> " + my_request.getAsyncContext().getRequest().toString()
//        		+ "\nrequest.getAsyncContext().getResponse().toString() -> " + my_request.getAsyncContext().getResponse().toString()
//        		+ "\nrequest.getAsyncContext().hasOriginalRequestAndResponse() -> " + my_request.getAsyncContext().hasOriginalRequestAndResponse()
        		+ "\nrequest.getAttributeNames() -> " + request.getAttributeNames()
        		+ "\nrequest.getCookies() -> " + request.getCookies()
        		+ "\nrequest.getDispatcherType().name() -> " + request.getDispatcherType().name()
        		+ "\nrequest.getDispatcherType().ordinal() -> " + request.getDispatcherType().ordinal()
        		+ "\nrequest.getDispatcherType().toString() -> " + request.getDispatcherType().toString()
        		+ "\nrequest.getDispatcherType().getDeclaringClass() -> " + request.getDispatcherType().getDeclaringClass()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().toString() -> " + request.getDispatcherType().getDeclaringClass().toString()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().getCanonicalName() -> " + request.getDispatcherType().getDeclaringClass().getCanonicalName()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().getModifiers() -> " + request.getDispatcherType().getDeclaringClass().getModifiers()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().getName() -> " + request.getDispatcherType().getDeclaringClass().getName()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().getSimpleName() -> " + request.getDispatcherType().getDeclaringClass().getSimpleName()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().getTypeName() -> " + request.getDispatcherType().getDeclaringClass().getTypeName()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().toGenericString() -> " + request.getDispatcherType().getDeclaringClass().toGenericString()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().desiredAssertionStatus() -> " + request.getDispatcherType().getDeclaringClass().desiredAssertionStatus()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().getAnnotatedSuperclass() -> " + request.getDispatcherType().getDeclaringClass().getAnnotatedSuperclass()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().getPackage() -> " + request.getDispatcherType().getDeclaringClass().getPackage()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().isAnnotation() -> " + request.getDispatcherType().getDeclaringClass().isAnnotation()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().isAnonymousClass() -> " + request.getDispatcherType().getDeclaringClass().isAnonymousClass()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().isArray() -> " + request.getDispatcherType().getDeclaringClass().isArray()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().isEnum() -> " + request.getDispatcherType().getDeclaringClass().isEnum()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().isInterface() -> " + request.getDispatcherType().getDeclaringClass().isInterface()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().isLocalClass() -> " + request.getDispatcherType().getDeclaringClass().isLocalClass()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().isMemberClass() -> " + request.getDispatcherType().getDeclaringClass().isMemberClass()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().isPrimitive() -> " + request.getDispatcherType().getDeclaringClass().isPrimitive()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().isSynthetic() -> " + request.getDispatcherType().getDeclaringClass().isSynthetic()
        		+ "\nrequest.getDispatcherType().getDeclaringClass().getProtectionDomain() -> " + request.getDispatcherType().getDeclaringClass().getProtectionDomain().toString()
//        		+ "\nrequest.getDispatcherType().getDeclaringClass().getDeclaredField(\"asd\") -> " + request.getDispatcherType().getDeclaringClass().getDeclaredField("asd").getName() <--- !!! java.lang.NoSuchFieldException: asd !!!
        		+ "\nrequest.getHeaderNames() -> " + request.getHeaderNames()
//        		+ "\nrequest.getInputStream().toString() -> " + my_request.getInputStream().toString()
//        		+ "\nrequest.getInputStream().available() -> " + my_request.getInputStream().available()
//        		+ "\nrequest.getInputStream().isFinished() -> " + my_request.getInputStream().isFinished()
//        		+ "\nrequest.getInputStream().isReady() -> " + my_request.getInputStream().isReady()
//        		+ "\nrequest.getInputStream().markSupported() -> " + my_request.getInputStream().markSupported()
        		+ "\nrequest.getLocale() -> " + request.getLocale()
        		+ "\nrequest.getLocales() -> " + request.getLocales()
        		+ "\nrequest.getParameterMap() -> " + request.getParameterMap()
        		+ "\nrequest.getParameterNames() -> " + request.getParameterNames()
        		+ "\nrequest.getParts() -> " + request.getParts()
        		+ "\nrequest.getReader().toString() -> " + request.getReader().toString()
        		+ "\nrequest.getRequestURL().length() -> " + request.getRequestURL().length()
        		+ "\nrequest.getRequestURL().codePoints() -> " + request.getRequestURL().codePoints()
        		+ "\nrequest.getRequestURL().codePoints().toString() -> " + request.getRequestURL().codePoints().toString()
        		+ "\nrequest.getRequestURL().codePoints().count() -> " + request.getRequestURL().codePoints().count()
        		+ "\nrequest.getRequestURL().codePoints().hashCode() -> " + request.getRequestURL().codePoints().hashCode()
        		+ "\nrequest.getRequestURL().codePoints().sum() -> " + request.getRequestURL().codePoints().sum()
        		+ "\nrequest.getRequestURL().codePoints().isParallel() -> " + request.getRequestURL().codePoints().isParallel()
        		+ "\nrequest.getServletContext().toString() -> " + request.getServletContext().toString()
        		+ "\nrequest.getServletContext().getContextPath() -> " + request.getServletContext().getContextPath()
        		+ "\nrequest.getServletContext().getEffectiveMajorVersion() -> " + request.getServletContext().getEffectiveMajorVersion()
        		+ "\nrequest.getServletContext().getEffectiveMinorVersion() -> " + request.getServletContext().getEffectiveMinorVersion()
        		+ "\nrequest.getServletContext().getMajorVersion() -> " + request.getServletContext().getMajorVersion()
        		+ "\nrequest.getServletContext().getMinorVersion() -> " + request.getServletContext().getMinorVersion()
        		+ "\nrequest.getServletContext().getServerInfo() -> " + request.getServletContext().getServerInfo()
        		+ "\nrequest.getServletContext().getServletContextName() -> " + request.getServletContext().getServletContextName()
//        		+ "\nrequest.getServletContext().getVirtualServerName() -> " + my_request.getServletContext().getVirtualServerName()
        		+ "\nrequest.getServletContext().getClassLoader().toString() -> " + request.getServletContext().getClassLoader().toString()
        		+ "\nClassLoader.getSystemClassLoader() -> " + ClassLoader.getSystemClassLoader()
        		+ "\nrequest.getServletContext().getClassLoader().getParent().toString() -> " + request.getServletContext().getClassLoader().getParent().toString()
        		+ "\nrequest.getServletContext().getDefaultSessionTrackingModes() -> " + request.getServletContext().getDefaultSessionTrackingModes()
        		+ "\nrequest.getServletContext().getEffectiveSessionTrackingModes() -> " + request.getServletContext().getEffectiveSessionTrackingModes()
        		+ "\nrequest.getServletContext().getFilterRegistrations() -> " + request.getServletContext().getFilterRegistrations()
        		+ "\nrequest.getServletContext().getInitParameterNames() -> " + request.getServletContext().getInitParameterNames()
        		+ "\nrequest.getServletContext().getJspConfigDescriptor() -> " + request.getServletContext().getJspConfigDescriptor()
        		+ "\nrequest.getServletContext().getServletRegistrations() -> " + request.getServletContext().getServletRegistrations()
        		+ "\nrequest.getServletContext().getSessionCookieConfig() -> " + request.getServletContext().getSessionCookieConfig()
        		+ "\nrequest.getServletContext().getSessionCookieConfig().toString() -> " + request.getServletContext().getSessionCookieConfig().toString()
        		+ "\nrequest.getServletContext().getSessionCookieConfig().getName() -> " + request.getServletContext().getSessionCookieConfig().getName()
        		+ "\nrequest.getServletContext().getSessionCookieConfig().getComment() -> " + request.getServletContext().getSessionCookieConfig().getComment()
        		+ "\nrequest.getServletContext().getSessionCookieConfig().getDomain() -> " + request.getServletContext().getSessionCookieConfig().getDomain()
        		+ "\nrequest.getServletContext().getSessionCookieConfig().getMaxAge() -> " + request.getServletContext().getSessionCookieConfig().getMaxAge()
        		+ "\nrequest.getServletContext().getSessionCookieConfig().getPath() -> " + request.getServletContext().getSessionCookieConfig().getPath()
        		+ "\nrequest.getServletContext().getSessionCookieConfig().hashCode() -> " + request.getServletContext().getSessionCookieConfig().hashCode()
        		+ "\nrequest.getServletContext().getSessionCookieConfig().isHttpOnly() -> " + request.getServletContext().getSessionCookieConfig().isHttpOnly()
        		+ "\nrequest.getServletContext().getSessionCookieConfig().isSecure() -> " + request.getServletContext().getSessionCookieConfig().isSecure()
        		+ "\nrequest.getSession().toString() -> " + request.getSession().toString()
        		+ "\nrequest.getSession().getCreationTime() -> " + request.getSession().getCreationTime()
        		+ "\nrequest.getSession().getId() -> " + request.getSession().getId()
        		+ "\nrequest.getSession().getLastAccessedTime() -> " + request.getSession().getLastAccessedTime()
        		+ "\nrequest.getSession().getMaxInactiveInterval() -> " + request.getSession().getMaxInactiveInterval()
        		+ "\nrequest.getSession().isNew() -> " + request.getSession().isNew()
//        		+ "\nrequest.getUserPrincipal().getName() -> " + my_request.getUserPrincipal().getName()
//        		+ "\nrequest.getUserPrincipal().toString() -> " + my_request.getUserPrincipal().toString()
        		+ "\nrequest.isAsyncStarted() -> " + request.isAsyncStarted()
        		+ "\nrequest.isAsyncSupported() -> " + request.isAsyncSupported()
        		+ "\nrequest.isRequestedSessionIdFromCookie() -> " + request.isRequestedSessionIdFromCookie()
        		+ "\nrequest.isRequestedSessionIdFromURL() -> " + request.isRequestedSessionIdFromURL()
        		+ "\nrequest.isRequestedSessionIdValid() -> " + request.isRequestedSessionIdValid()
        		+ "\nrequest.isSecure() -> " + request.isSecure()
        		+ "\n\ngetInvocationContext().getLocale().toString() -> " + invocation.getInvocationContext().getLocale().toString()
        		+ "\ngetInvocationContext().getLocale().getCountry() -> " + invocation.getInvocationContext().getLocale().getCountry()
        		+ "\ngetInvocationContext().getLocale().getDisplayCountry() -> " + invocation.getInvocationContext().getLocale().getDisplayCountry()
        		+ "\ngetInvocationContext().getLocale().getDisplayLanguage() -> " + invocation.getInvocationContext().getLocale().getDisplayLanguage()
        		+ "\ngetInvocationContext().getLocale().getDisplayName() -> " + invocation.getInvocationContext().getLocale().getDisplayName()
        		+ "\ngetInvocationContext().getLocale().getDisplayScript() -> " + invocation.getInvocationContext().getLocale().getDisplayScript()
        		+ "\ngetInvocationContext().getLocale().getDisplayVariant() -> " + invocation.getInvocationContext().getLocale().getDisplayVariant()
        		+ "\ngetInvocationContext().getLocale().getDisplayVariant() -> " + invocation.getInvocationContext().getLocale().getDisplayVariant()
        		+ "\ngetInvocationContext().getLocale().getISO3Country() -> " + invocation.getInvocationContext().getLocale().getISO3Country()
        		+ "\ngetInvocationContext().getLocale().getISO3Language() -> " + invocation.getInvocationContext().getLocale().getISO3Language()
        		+ "\ngetInvocationContext().getLocale().getLanguage() -> " + invocation.getInvocationContext().getLocale().getLanguage()
        		+ "\ngetInvocationContext().getLocale().getScript() -> " + invocation.getInvocationContext().getLocale().getScript()
        		+ "\ngetInvocationContext().getLocale().getVariant() -> " + invocation.getInvocationContext().getLocale().getVariant()
        		+ "\ngetInvocationContext().getLocale().toLanguageTag() -> " + invocation.getInvocationContext().getLocale().toLanguageTag()
        		+ "\ngetInvocationContext().getLocale().getExtensionKeys() -> " + invocation.getInvocationContext().getLocale().getExtensionKeys()
        		+ "\ngetInvocationContext().getLocale().getUnicodeLocaleAttributes() -> " + invocation.getInvocationContext().getLocale().getUnicodeLocaleAttributes()
        		+ "\ngetInvocationContext().getLocale().getUnicodeLocaleKeys() -> " + invocation.getInvocationContext().getLocale().getUnicodeLocaleKeys()
        		+ "\ngetInvocationContext().getLocale().hasExtensions() -> " + invocation.getInvocationContext().getLocale().hasExtensions()
        		+ "\ngetInvocationContext().getLocale().stripExtensions() -> " + invocation.getInvocationContext().getLocale().stripExtensions()
        		+ "\n\ngetInvocationContext().getContainer().toString() -> " + invocation.getInvocationContext().getContainer().toString()
        		+ "\n\ngetInvocationContext().getContextMap() -> " + invocation.getInvocationContext().getContextMap()
        		+ "\ngetInvocationContext().getConversionErrors() -> " + invocation.getInvocationContext().getConversionErrors()
        		+ "\ngetInvocationContext().getName() -> " + invocation.getInvocationContext().getName()
        		+ "\n\ngetProxy().getConfig().getLocation().getURI() -> " + invocation.getProxy().getConfig().getLocation().getURI()
        		+ "\ngetProxy().getConfig().getLocation().getLineNumber() -> " + invocation.getProxy().getConfig().getLocation().getLineNumber()
        		+ "\ngetProxy().getConfig().getLocation().getDescription() -> " + invocation.getProxy().getConfig().getLocation().getDescription()
        		+ "\ngetProxy().getConfig().getLocation().getColumnNumber() -> " + invocation.getProxy().getConfig().getLocation().getColumnNumber()
        		+ "\n\ngetProxy().getConfig().getInterceptors() -> " + invocation.getProxy().getConfig().getInterceptors()
        		+ "\n\ngetProxy().getConfig().getParams() -> " + invocation.getProxy().getConfig().getParams()
        		+ "\ngetProxy().getConfig().getResults() -> " + invocation.getProxy().getConfig().getResults()
        		+ "\ngetProxy().getConfig().getPackageName() -> " + invocation.getProxy().getConfig().getPackageName()
        		+ "\ngetProxy().getConfig().getName() -> " + invocation.getProxy().getConfig().getName()
        		+ "\ngetProxy().getConfig().getMethodName() -> " + invocation.getProxy().getConfig().getMethodName()
        		+ "\ngetProxy().getConfig().getClassName() -> " + invocation.getProxy().getConfig().getClassName()
        		+ "\n\ngetProxy().isMethodSpecified() -> " + invocation.getProxy().isMethodSpecified()
        		+ "\ngetProxy().getExecuteResult() -> " + invocation.getProxy().getExecuteResult()
        		+ "\ngetProxy().getAction() -> " + invocation.getProxy().getAction()
        		+ "\ngetProxy().getNamespace() -> " + invocation.getProxy().getNamespace()
        		+ "\ngetProxy().getMethod() -> " + invocation.getProxy().getMethod()
        		+ "\ngetProxy().getActionName() -> " + invocation.getProxy().getActionName()
        		+ "\n\ngetStack().toString() -> " + invocation.getStack().toString()
        		+ "\ngetStack().pop() -> " + invocation.getStack().pop()
        		+ "\ngetStack().peek() -> " + invocation.getStack().peek()
        		+ "\ngetStack().getRoot() -> " + invocation.getStack().getRoot()
        		+ "\ngetStack().getExprOverrides() -> " + invocation.getStack().getExprOverrides()
        		+ "\ngetStack().getContext() -> " + invocation.getStack().getContext()
        		+ "\ngetStack().getContext().toString() -> " + invocation.getStack().getContext().toString()
        		+ "\ngetStack().getContext().size() -> " + invocation.getStack().getContext().size()
        		+ "\ngetStack().getContext().isEmpty() -> " + invocation.getStack().getContext().isEmpty()
        		+ "\ngetStack().size() -> " + invocation.getStack().size()
        		+ "\ngetStack().hashCode() -> " + invocation.getStack().hashCode()
        		+ "\n\ngetAction() -> " + invocation.getAction()
        		+ "\nisExecuted() -> " + invocation.isExecuted()
//        		+ "\ninvokeActionOnly() -> " + invocation.invokeActionOnly() <--- !!! IllegalStateExeption !!!
        		+ "\nHttpRequestInterceptor URL -> " + request.getRequestURL()
        		+ "\ngetResultCode() -> " + invocation.getResultCode()
        		+ "\ntoString() -> " + invocation.toString()
//        		+ "\ninvoke() -> " + invocation.invoke()  <--- !!! IllegalStateExeption !!!
//        		+ "\ngetResult().toString() -> " + invocation.getResult().toString() <--- !!! request = null !!!
        		+ "\n((Action) invocation.getAction() instanceof UserAware) -> " + ((Action) invocation.getAction() instanceof UserAware)
        		+ "\n\n\t*********************************");
		
		return invocation.invoke();
	}
}
